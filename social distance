var population = 100;
var humans = [];

function setup() {
  pixelDensity(1);
  createCanvas(windowWidth, windowHeight);

  for (var i = 0; i < population; i++) {
    let stayHome = true;

    if (i <= population * 0.5)
      stayHome = false;

    humans[i] = new Human(
      i,
      random(20, 20), // diametre
      random(0 + 100, width - 100), // position X
      random(0 + 100, height - 100), // position Y
      random(-2, 2), // Vitesse X
      random(-2, 2), // Vitesse Y
      stayHome
    );
  }
  console.log(humans);
}

function draw() {
  background(0);

  for (var i = 0; i < humans.length; i++) {
    if (humans[i].stayHome == false) {
      humans[i].collide();
      humans[i].updatePosition();
    }
    humans[i].updateInfection();
    humans[i].display();
  }
}


class Human {
  constructor(id, diameter, x, y, spx, spy, stayHome) {
    this.id = id;
    this.diameter = diameter;
    this.x = x;
    this.y = y;
    this.spx = spx;
    this.spy = spy;
    this.infected = false; // Patient zÃ©ro
    this.cured = false;
    this.infectedTime = 0;
    this.stayHome = stayHome;

    if (this.id == 0)
      this.infected = true;

  }

  collide() {
    // Check de la position des autres Ã  partir de ma position
    for (let i = this.id + 1; i < humans.length; i++) {
      let dx = humans[i].x - this.x;
      let dy = humans[i].y - this.y;
      let distance = sqrt(dx * dx + dy * dy);
      let distanceMin = humans[i].diameter / 2 + this.diameter / 2;

      if (distance <= distanceMin) {
        console.log('TOUCHED !');
        let angle = atan2(dy, dx);

        let targetX = this.x + cos(angle) * distanceMin;
        let targetY = this.y + sin(angle) * distanceMin;

        let ax = (targetX - humans[i].x) * 0.1;
        let ay = (targetY - humans[i].y) * 0.1;

        this.spx -= ax;
        this.spy -= ay;

        humans[i].spx += ax;
        humans[i].spy += ay;

        if (this.infected == true)
          humans[i].infected = true;
      }
    }
  }

  updateInfection() {
    if (this.infected == true) {
      this.infectedTime++;
      if (this.infectedTime >= 400) {
        this.infected = false;
        this.cured = true;
      }
    }
  }

  updatePosition() {

    this.x += this.spx;
    this.y += this.spy;

    if (this.x >= width - this.diameter / 2 || this.x <= this.diameter / 2) {
      this.spx *= -1;
    }

    if (this.y >= height - this.diameter / 2 || this.y <= this.diameter / 2) {
      this.spy *= -1;
    }
  }

  display() {
    textSize(30);
    fill(255);

    if (this.infected)
      fill(255, 0, 0);

    if (this.cured)
      fill(0, 255, 0);

    if (this.infected) {
      text('ðŸ¦ ', this.x, this.y);
    } else if (this.cured) {
      //ellipse(this.x, this.y, this.diameter, this.diameter);
      text('ðŸ˜Ž', this.x, this.y);
    } else {
      text('ðŸ˜·', this.x, this.y);
    }

  }
};
